version: '3.8'

services:
  rbac-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cloud-kitchen-rbac
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      # Database Configuration
      - DATABASE_URL=jdbc:postgresql://postgres:5432/cloud_kitchen_rbac
      - DB_USERNAME=postgres
      - DB_PASSWORD=${DB_PASSWORD:-rbac_secure_password}
      
      # JWT Configuration
      - JWT_SECRET=${JWT_SECRET:-2M7w1SiV5XDAXEmVqg9gZWCXfF50l11FqJR2aSC1a8K9mN3pQ7rT2uV8wX1yZ4bC6dE9fG2hJ5kL8mN1oP4qR7sT3uV6wX9yZ2}
      - JWT_ACCESS_EXPIRY=${JWT_ACCESS_EXPIRY:-86400}
      - JWT_REFRESH_EXPIRY=${JWT_REFRESH_EXPIRY:-604800}
      
      # Application Configuration
      - SPRING_PROFILES_ACTIVE=prod
      - TZ=Asia/Kolkata
      - JAVA_OPTS=-Xmx512m -Xms256m -Duser.timezone=Asia/Kolkata
      
      # CORS Configuration
      - CORS_ORIGINS=${CORS_ORIGINS:-http://localhost:3000,https://yourdomain.com}
    
    depends_on:
      postgres:
        condition: service_healthy
    
    networks:
      - rbac-network
    
    volumes:
      - app-logs:/app/logs
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  postgres:
    image: postgres:15-alpine
    container_name: rbac-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=cloud_kitchen_rbac
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${DB_PASSWORD:-rbac_secure_password}
      - TZ=Asia/Kolkata
      - PGTZ=Asia/Kolkata
    
    ports:
      - "5432:5432"
    
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    
    networks:
      - rbac-network
    
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d cloud_kitchen_rbac"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: rbac-redis
    restart: unless-stopped
    environment:
      - TZ=Asia/Kolkata
    
    ports:
      - "6379:6379"
    
    volumes:
      - redis-data:/data
    
    networks:
      - rbac-network
    
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  nginx:
    image: nginx:alpine
    container_name: rbac-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    
    depends_on:
      - rbac-service
    
    networks:
      - rbac-network

volumes:
  postgres-data:
    driver: local
  redis-data:
    driver: local
  app-logs:
    driver: local

networks:
  rbac-network:
    driver: bridge